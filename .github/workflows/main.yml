name: integrating composite action workflow
description: A workflow to lint, build, test, and deploy code using a custom composite action.
on:
  workflow_dispatch:
    inputs:
      deploy_env:
        description: 'Select deployment target'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - QA
          - PROD
      version:
        description: 'Optionally specify the version tag (e.g., v1.0.2)'
        required: false
        default: 'v1.0.0'
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
      - name: Run Linting
        run: npm run lint
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: List .github/actions contents
        run: ls -R ./.github/actions
      - name: Node Build Action
        uses: ./.github/actions/node-build
        with:
          node-version: '18'
      - name: Upload artifacts to github pages
        uses: actions/upload-pages-artifact@v4
        with:
          name: website-build
          path: dist
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: npm test
  DEV_Deploy:
    needs: build
    # strategy:
    #   matrix:
    #     node-version: [16, 18]
    #     operating-system: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.event.inputs.deploy_env == 'DEV' }}
    steps:
      - name: Deploy to github pages using DEV environment
        id: deployment
        uses: actions/deploy-pages@v4
          
  QA_Deploy:
    needs: build
    # strategy:
    #   matrix:
    #     node-version: [16, 18]
    #     operating-system: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.event.inputs.deploy_env == 'QA' }}
    steps:
      - name: Deploy to github pages using QA environment
        id: deployment
        uses: actions/deploy-pages@v4
  PROD_Deploy:
    needs: build  
    # strategy:
    #   matrix:
    #     node-version: [16, 18]
    #     operating-system: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.event.inputs.deploy_env == 'PROD' }}
    steps:
      - name: Deploy to github pages using PROD environment
        id: deployment
        uses: actions/deploy-pages@v4
